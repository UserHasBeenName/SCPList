import tkinter as tk
from tkinter.ttk import *
import webbrowser
from tkinter import messagebox
from os import remove

def newfile():
    try:
        with open("scp.txt", "r"):
            pass
    except FileNotFoundError:
        with open("scp.txt", "x") as f:
            for i in range(0, 8001):
                if i == 8001:
                    f.writelines("0")
                else:
                    if i == 0:
                        f.writelines("PLEASE DO NOT EDIT THIS FILE OR MOVE IT FROM IT'S CURRENT DIRECTORY. (SAME DIRECTORY AS MAIN) 1 = READ 0 = UNREAD\n")
                    else:
                        f.writelines("0\n")
    try:
        with open("scp_out.txt", "r"):
            pass
    except FileNotFoundError:
        with open("scp_out.txt", "x") as f:
            for i in range(0, 8001):
                if i == 8001:
                    f.writelines("0")
                else:
                    if i == 0:
                        f.writelines("PLEASE DO NOT EDIT THIS FILE OR MOVE IT FROM IT'S CURRENT DIRECTORY. (SAME DIRECTORY AS MAIN) 1 = READ 0 = UNREAD\n")
                    else:
                        f.writelines("0\n")
newfile()


def update(self):
    self.delete(0, 8000)
    is_read = "."
    i = 0
    f = open("scp_out.txt", "r")
    while is_read != "" and i < 8000:
        if i == 0:
            is_read = f.readline()
        is_read = f.readline()
        if i < 10:
            x = "00" + str(i)
        elif i < 100 and i >= 10:
            x = "0" + str(i)
        else:
            x = i
        if is_read == "0\n" or is_read == "":
            self.insert(i, f"      SCP {x}")
        else:
            self.insert(i, f"[X] SCP {x}")
        i = i + 1
    f.close()



def website():
    for i in lst.curselection():
        desired = lst.get(i)
    try:
        if "[X]" in desired:
            print("Conf")
            desired = desired.replace("[X]", "")
    except UnboundLocalError:
        desired = ""
    webbrowser.open("https://scp-wiki.wikidot.com/" + desired, new=2)


def wipe():
    sure = messagebox.askokcancel("Are you sure?", "This will delete all your entries!", default="cancel")
    if sure:
        sure_2 = messagebox.askokcancel("But are you SURE sure?", "Are you absolutely positive you want to do this?", default="cancel")
        if sure_2:
            remove("scp.txt")
            remove("scp_out.txt")
            newfile()
            update(lst)


def read():
    # Get the pos of the listbox item
    for item in lst.curselection():
        read_ent = (item+1)
    # Overwrite in txt
    with open("scp.txt", "r+") as infile:
        with open("scp_out.txt", "r+") as outfile:
            outfile.write("")
            for i in range(0, 8001):
                if i == int(read_ent):
                    infile.readline()
                    outfile.writelines("1\n")
                else:
                    to_write = infile.readline()
                    outfile.writelines(to_write)
    # Make in same as out
    open("scp.txt", "w").close()
    with open("scp_out.txt", "r") as outfile:
        with open("scp.txt", "a") as infile:
            r = "."
            while r != "":
                r = outfile.readline()
                infile.write(r)
    # Change visual
    update(lst)


def unread():
    # Get the pos of the listbox item
    for item in lst.curselection():
        read_ent = (item+1)
    # Overwrite in txt
    with open("scp.txt", "r+") as infile:
        with open("scp_out.txt", "r+") as outfile:
            outfile.write("")
            for i in range(0, 8001):
                if i == int(read_ent):
                    infile.readline()
                    outfile.writelines("0\n")
                else:
                    to_write = infile.readline()
                    outfile.writelines(to_write)
    # Make in same as out
    open("scp.txt", "w").close()
    with open("scp_out.txt", "r") as outfile:
        with open("scp.txt", "a") as infile:
            r = "."
            while r != "":
                r = outfile.readline()
                infile.write(r)
    # Change visual
    update(lst)


def webhud():
    webbrowser.open("https://scp-wiki.wikidot.com/", new=2)


root = tk.Tk()

root.resizable(False, False)
root.geometry("275x350")
root.title("SCPList")
root.config(bg="light blue")

try:
    root.iconbitmap("images.ico")
except tk.TclError:
    print("Test")

lst = tk.Listbox(root, width = 24, height=11)

update(lst)

scrollbar = tk.Scrollbar(root, orient='vertical', command=lst.yview)
lst.place(x=20, y=20)
scrollbar.place(x=150, y=22, height=177)
lst["yscrollcommand"] = scrollbar.set


read_but = tk.Button(root, text="Mark \nas \nread", height=11, width=8, bg="light green", command=read)
read_but.place(x=195, y=20)

unread_but = tk.Button(root, text="Mark as unread", height=4, width=15, bg="light grey", command=unread)
unread_but.place(x=145, y=220)

website_but = tk.Button(root, text="Take me to \nthis entry!", bg="light green", height=4, width=15, command=website)
website_but.place(x=20, y=220)

website_but_hud = tk.Button(root, text="Wiki Home", bg="white", height=2, width=20, command=webhud)
website_but_hud.place(x=20, y=300)

wipe_but = tk.Button(root, text="Wipe", bg="pink", height=2, width=10, command=wipe)
wipe_but.place(x=180, y=300)

root.mainloop()
